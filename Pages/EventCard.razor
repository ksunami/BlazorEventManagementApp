@page "/eventcard/{id:int}"
@using BlazorEventManagementApp.Models
@inject BlazorEventManagementApp.Data.EventService EventService
@inject NavigationManager Nav

<h3 class="mb-3 d-flex align-items-center gap-2">
  <button class="btn btn-outline-secondary btn-sm" @onclick="GoBack" title="Back to list" aria-label="Back to list">
    <i class="bi bi-arrow-left"></i>
  </button>
  <span><i class="bi bi-card-text me-1"></i> Event Card</span>
</h3>

@if (isLoading)
{
    <div class="card-neo p-3">
        <div class="placeholder-glow">
            <span class="placeholder col-6"></span>
        </div>
        <div class="mt-3 d-flex gap-2 align-items-center">
            <span class="placeholder col-2"></span>
            <span class="placeholder col-2"></span>
        </div>
        <div class="mt-4">
            <span class="placeholder col-4"></span>
        </div>
    </div>
}
else if (evt is null)
{
    <div class="alert alert-warning d-flex align-items-center gap-2" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        <div>Event not found.</div>
    </div>
    <button class="btn btn-outline-secondary" @onclick="GoBack">
        <i class="bi bi-list-ul"></i> Back to events
    </button>
}
else
{
    <article class="card-neo p-3" aria-labelledby="event-title">
        <header class="d-flex flex-wrap align-items-start justify-content-between gap-2">
            <div class="d-flex align-items-center gap-2">
                <i class="bi bi-calendar-event fs-4 text-primary"></i>
                <h4 id="event-title" class="m-0 fw-semibold">@evt.EventName</h4>
            </div>
            <span class="badge rounded-pill badge-date align-self-center">
                @evt.Date.ToString("D")
            </span>
        </header>

        <hr class="my-3" />

        <section class="d-flex flex-column gap-2">
            <div class="d-flex align-items-center gap-2">
                <i class="bi bi-geo-alt"></i>
                <div class="fw-medium">@evt.Location</div>
            </div>

            <div class="d-flex align-items-center gap-2 text-muted">
                <i class="bi bi-hash"></i>
                <div>ID: @evt.Id</div>
            </div>
        </section>
    </article>

    <div class="mt-3">
        <button class="btn btn-outline-secondary" @onclick="GoBack">
            <i class="bi bi-list-ul"></i> Back to events
        </button>
    </div>
}

@code {
    [Parameter] public int id { get; set; }

    private Event? evt;
    private bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        isLoading = true;
        evt = await EventService.GetEventByIdAsync(id);
        isLoading = false;
    }

    private void GoBack() => Nav.NavigateTo("/events");
}
